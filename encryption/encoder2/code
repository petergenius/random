#!/usr/bin/env python3

import random
import sys

try: import skilstak.colors as c
except ImportError: import colors as c

print(c.cl + c.X, end="")

characters = ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","-","_"]

def average(chars):
    ords = [ord(char) for char in chars]

    sord = sum(ords)
    amt = len(ords)

    return round(sord / amt, 2)

def encrypt(chars, seed=1):
    #default args
    ords = [ord(char) for char in chars]
    print(ords)
    crypt = ""
    for num in ords:
        random.seed(seed)
        sNum = random.randint(1,99)
        crypt += chr(num * sNum)

    return crypt

def decrypt(chars, seed=1):
    ords = [ord(char) for char in chars]

    crypt = ""
    for num in ords:
        random.seed(seed)
        sNum = random.randint(1,99)
        crypt += chr(int(num / sNum))

    return crypt

def keygen(length):
    key = 0

    for i in range(length):
        random.seed()
        key += ord(random.choice(characters)) * random.randint(1,9)

    return key


if __name__ == '__main__':
    mode = input("encrypt or decrypt? > ")
    data = input("data > ")
    if mode in ["e", "encrypt"]:
        key = keygen(64)
        print(c.y + "Key:     " + str(key))
        print(encrypt(data, key))
    elif mode in ["d", "decrypt"]:
        key = input("key > ")
        print(decrypt(data, int(key)))
    else:
        print(c.r + "Incorrect Argument: " + mode)
